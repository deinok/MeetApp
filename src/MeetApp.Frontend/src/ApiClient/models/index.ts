/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type ApiError, type DateOnly, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
// @ts-ignore
import { type Guid } from 'guid-typescript';

export type BussinesCategoryType = (typeof BussinesCategoryTypeObject)[keyof typeof BussinesCategoryTypeObject];
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OfferCreateRequest}
 */
// @ts-ignore
export function createOfferCreateRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOfferCreateRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OfferCreateResponse}
 */
// @ts-ignore
export function createOfferCreateResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOfferCreateResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OfferReadResponse}
 */
// @ts-ignore
export function createOfferReadResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOfferReadResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OfferUpdateRequest}
 */
// @ts-ignore
export function createOfferUpdateRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOfferUpdateRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProblemDetails}
 */
// @ts-ignore
export function createProblemDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProblemDetails;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegistrationRequest}
 */
// @ts-ignore
export function createRegistrationRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegistrationRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TextTranslationRequest}
 */
// @ts-ignore
export function createTextTranslationRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTextTranslationRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TextTranslationResponse}
 */
// @ts-ignore
export function createTextTranslationResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTextTranslationResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TokenResponseError}
 */
// @ts-ignore
export function createTokenResponseErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTokenResponseError;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TokenResponse}
 */
// @ts-ignore
export function createTokenResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTokenResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserResponse}
 */
// @ts-ignore
export function createUserResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOfferCreateRequest(offerCreateRequest: Partial<OfferCreateRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bussinesId": n => { offerCreateRequest.bussinesId = n.getGuidValue(); },
        "description": n => { offerCreateRequest.description = n.getStringValue(); },
        "expirationDate": n => { offerCreateRequest.expirationDate = n.getDateOnlyValue(); },
        "tag": n => { offerCreateRequest.tag = n.getStringValue(); },
        "title": n => { offerCreateRequest.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOfferCreateResponse(offerCreateResponse: Partial<OfferCreateResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bussinesId": n => { offerCreateResponse.bussinesId = n.getGuidValue(); },
        "description": n => { offerCreateResponse.description = n.getStringValue(); },
        "expirationDate": n => { offerCreateResponse.expirationDate = n.getDateOnlyValue(); },
        "id": n => { offerCreateResponse.id = n.getGuidValue(); },
        "tag": n => { offerCreateResponse.tag = n.getStringValue(); },
        "title": n => { offerCreateResponse.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOfferReadResponse(offerReadResponse: Partial<OfferReadResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bussinesId": n => { offerReadResponse.bussinesId = n.getGuidValue(); },
        "description": n => { offerReadResponse.description = n.getStringValue(); },
        "expirationDate": n => { offerReadResponse.expirationDate = n.getDateOnlyValue(); },
        "id": n => { offerReadResponse.id = n.getGuidValue(); },
        "tag": n => { offerReadResponse.tag = n.getStringValue(); },
        "title": n => { offerReadResponse.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOfferUpdateRequest(offerUpdateRequest: Partial<OfferUpdateRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { offerUpdateRequest.description = n.getStringValue(); },
        "expirationDate": n => { offerUpdateRequest.expirationDate = n.getDateOnlyValue(); },
        "tag": n => { offerUpdateRequest.tag = n.getStringValue(); },
        "title": n => { offerUpdateRequest.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProblemDetails(problemDetails: Partial<ProblemDetails> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "detail": n => { problemDetails.detail = n.getStringValue(); },
        "instance": n => { problemDetails.instance = n.getStringValue(); },
        "status": n => { problemDetails.status = n.getNumberValue(); },
        "title": n => { problemDetails.title = n.getStringValue(); },
        "type": n => { problemDetails.type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegistrationRequest(registrationRequest: Partial<RegistrationRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bussinesAddress": n => { registrationRequest.bussinesAddress = n.getStringValue(); },
        "bussinesCategory": n => { registrationRequest.bussinesCategory = n.getEnumValue<BussinesCategoryType>(BussinesCategoryTypeObject); },
        "bussinesName": n => { registrationRequest.bussinesName = n.getStringValue(); },
        "cif": n => { registrationRequest.cif = n.getStringValue(); },
        "city": n => { registrationRequest.city = n.getStringValue(); },
        "email": n => { registrationRequest.email = n.getStringValue(); },
        "googleMapsUrl": n => { registrationRequest.googleMapsUrl = n.getStringValue(); },
        "password": n => { registrationRequest.password = n.getStringValue(); },
        "profilePicture": n => { registrationRequest.profilePicture = n.getStringValue(); },
        "userType": n => { registrationRequest.userType = n.getEnumValue<UserType>(UserTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTextTranslationRequest(textTranslationRequest: Partial<TextTranslationRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "targetLanguage": n => { textTranslationRequest.targetLanguage = n.getStringValue(); },
        "text": n => { textTranslationRequest.text = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTextTranslationResponse(textTranslationResponse: Partial<TextTranslationResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "text": n => { textTranslationResponse.text = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTokenResponse(tokenResponse: Partial<TokenResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "access_token": n => { tokenResponse.accessToken = n.getStringValue(); },
        "expires_in": n => { tokenResponse.expiresIn = n.getNumberValue(); },
        "refresh_token": n => { tokenResponse.refreshToken = n.getStringValue(); },
        "scope": n => { tokenResponse.scope = n.getStringValue(); },
        "token_type": n => { tokenResponse.tokenType = n.getStringValue(); },
        "user": n => { tokenResponse.user = n.getObjectValue<UserResponse>(createUserResponseFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTokenResponseError(tokenResponseError: Partial<TokenResponseError> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "error_description": n => { tokenResponseError.errorDescription = n.getStringValue(); },
        "error": n => { tokenResponseError.errorEscaped = n.getStringValue(); },
        "error_uri": n => { tokenResponseError.errorUri = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserResponse(userResponse: Partial<UserResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bussinesAddress": n => { userResponse.bussinesAddress = n.getStringValue(); },
        "bussinesCategory": n => { userResponse.bussinesCategory = n.getEnumValue<BussinesCategoryType>(BussinesCategoryTypeObject); },
        "bussinesName": n => { userResponse.bussinesName = n.getStringValue(); },
        "cif": n => { userResponse.cif = n.getStringValue(); },
        "city": n => { userResponse.city = n.getStringValue(); },
        "email": n => { userResponse.email = n.getStringValue(); },
        "googleMapsUrl": n => { userResponse.googleMapsUrl = n.getStringValue(); },
        "id": n => { userResponse.id = n.getGuidValue(); },
        "profilePicture": n => { userResponse.profilePicture = n.getStringValue(); },
        "userType": n => { userResponse.userType = n.getEnumValue<UserType>(UserTypeObject); },
    }
}
export interface OfferCreateRequest extends Parsable {
    /**
     * The bussinesId property
     */
    bussinesId?: Guid | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The expirationDate property
     */
    expirationDate?: DateOnly | null;
    /**
     * The tag property
     */
    tag?: string | null;
    /**
     * The title property
     */
    title?: string | null;
}
export interface OfferCreateResponse extends ApiError, Parsable {
    /**
     * The bussinesId property
     */
    bussinesId?: Guid | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The expirationDate property
     */
    expirationDate?: DateOnly | null;
    /**
     * The id property
     */
    id?: Guid | null;
    /**
     * The tag property
     */
    tag?: string | null;
    /**
     * The title property
     */
    title?: string | null;
}
export interface OfferReadResponse extends ApiError, Parsable {
    /**
     * The bussinesId property
     */
    bussinesId?: Guid | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The expirationDate property
     */
    expirationDate?: DateOnly | null;
    /**
     * The id property
     */
    id?: Guid | null;
    /**
     * The tag property
     */
    tag?: string | null;
    /**
     * The title property
     */
    title?: string | null;
}
export interface OfferUpdateRequest extends Parsable {
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The expirationDate property
     */
    expirationDate?: DateOnly | null;
    /**
     * The tag property
     */
    tag?: string | null;
    /**
     * The title property
     */
    title?: string | null;
}
export interface ProblemDetails extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The detail property
     */
    detail?: string | null;
    /**
     * The instance property
     */
    instance?: string | null;
    /**
     * The status property
     */
    status?: number | null;
    /**
     * The title property
     */
    title?: string | null;
    /**
     * The type property
     */
    type?: string | null;
}
export interface RegistrationRequest extends ApiError, Parsable {
    /**
     * The bussinesAddress property
     */
    bussinesAddress?: string | null;
    /**
     * The bussinesCategory property
     */
    bussinesCategory?: BussinesCategoryType | null;
    /**
     * The bussinesName property
     */
    bussinesName?: string | null;
    /**
     * The cif property
     */
    cif?: string | null;
    /**
     * The city property
     */
    city?: string | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The googleMapsUrl property
     */
    googleMapsUrl?: string | null;
    /**
     * The password property
     */
    password?: string | null;
    /**
     * The profilePicture property
     */
    profilePicture?: string | null;
    /**
     * The userType property
     */
    userType?: UserType | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOfferCreateRequest(writer: SerializationWriter, offerCreateRequest: Partial<OfferCreateRequest> | undefined | null = {}) : void {
    if (offerCreateRequest) {
        writer.writeGuidValue("bussinesId", offerCreateRequest.bussinesId);
        writer.writeStringValue("description", offerCreateRequest.description);
        writer.writeDateOnlyValue("expirationDate", offerCreateRequest.expirationDate);
        writer.writeStringValue("tag", offerCreateRequest.tag);
        writer.writeStringValue("title", offerCreateRequest.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOfferCreateResponse(writer: SerializationWriter, offerCreateResponse: Partial<OfferCreateResponse> | undefined | null = {}) : void {
    if (offerCreateResponse) {
        writer.writeGuidValue("bussinesId", offerCreateResponse.bussinesId);
        writer.writeStringValue("description", offerCreateResponse.description);
        writer.writeDateOnlyValue("expirationDate", offerCreateResponse.expirationDate);
        writer.writeGuidValue("id", offerCreateResponse.id);
        writer.writeStringValue("tag", offerCreateResponse.tag);
        writer.writeStringValue("title", offerCreateResponse.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOfferReadResponse(writer: SerializationWriter, offerReadResponse: Partial<OfferReadResponse> | undefined | null = {}) : void {
    if (offerReadResponse) {
        writer.writeGuidValue("bussinesId", offerReadResponse.bussinesId);
        writer.writeStringValue("description", offerReadResponse.description);
        writer.writeDateOnlyValue("expirationDate", offerReadResponse.expirationDate);
        writer.writeGuidValue("id", offerReadResponse.id);
        writer.writeStringValue("tag", offerReadResponse.tag);
        writer.writeStringValue("title", offerReadResponse.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOfferUpdateRequest(writer: SerializationWriter, offerUpdateRequest: Partial<OfferUpdateRequest> | undefined | null = {}) : void {
    if (offerUpdateRequest) {
        writer.writeStringValue("description", offerUpdateRequest.description);
        writer.writeDateOnlyValue("expirationDate", offerUpdateRequest.expirationDate);
        writer.writeStringValue("tag", offerUpdateRequest.tag);
        writer.writeStringValue("title", offerUpdateRequest.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProblemDetails(writer: SerializationWriter, problemDetails: Partial<ProblemDetails> | undefined | null = {}) : void {
    if (problemDetails) {
        writer.writeStringValue("detail", problemDetails.detail);
        writer.writeStringValue("instance", problemDetails.instance);
        writer.writeNumberValue("status", problemDetails.status);
        writer.writeStringValue("title", problemDetails.title);
        writer.writeStringValue("type", problemDetails.type);
        writer.writeAdditionalData(problemDetails.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegistrationRequest(writer: SerializationWriter, registrationRequest: Partial<RegistrationRequest> | undefined | null = {}) : void {
    if (registrationRequest) {
        writer.writeStringValue("bussinesAddress", registrationRequest.bussinesAddress);
        writer.writeEnumValue<BussinesCategoryType>("bussinesCategory", registrationRequest.bussinesCategory);
        writer.writeStringValue("bussinesName", registrationRequest.bussinesName);
        writer.writeStringValue("cif", registrationRequest.cif);
        writer.writeStringValue("city", registrationRequest.city);
        writer.writeStringValue("email", registrationRequest.email);
        writer.writeStringValue("googleMapsUrl", registrationRequest.googleMapsUrl);
        writer.writeStringValue("password", registrationRequest.password);
        writer.writeStringValue("profilePicture", registrationRequest.profilePicture);
        writer.writeEnumValue<UserType>("userType", registrationRequest.userType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTextTranslationRequest(writer: SerializationWriter, textTranslationRequest: Partial<TextTranslationRequest> | undefined | null = {}) : void {
    if (textTranslationRequest) {
        writer.writeStringValue("targetLanguage", textTranslationRequest.targetLanguage);
        writer.writeStringValue("text", textTranslationRequest.text);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTextTranslationResponse(writer: SerializationWriter, textTranslationResponse: Partial<TextTranslationResponse> | undefined | null = {}) : void {
    if (textTranslationResponse) {
        writer.writeStringValue("text", textTranslationResponse.text);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTokenResponse(writer: SerializationWriter, tokenResponse: Partial<TokenResponse> | undefined | null = {}) : void {
    if (tokenResponse) {
        writer.writeStringValue("access_token", tokenResponse.accessToken);
        writer.writeNumberValue("expires_in", tokenResponse.expiresIn);
        writer.writeStringValue("refresh_token", tokenResponse.refreshToken);
        writer.writeStringValue("scope", tokenResponse.scope);
        writer.writeStringValue("token_type", tokenResponse.tokenType);
        writer.writeObjectValue<UserResponse>("user", tokenResponse.user, serializeUserResponse);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTokenResponseError(writer: SerializationWriter, tokenResponseError: Partial<TokenResponseError> | undefined | null = {}) : void {
    if (tokenResponseError) {
        writer.writeStringValue("error_description", tokenResponseError.errorDescription);
        writer.writeStringValue("error", tokenResponseError.errorEscaped);
        writer.writeStringValue("error_uri", tokenResponseError.errorUri);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserResponse(writer: SerializationWriter, userResponse: Partial<UserResponse> | undefined | null = {}) : void {
    if (userResponse) {
        writer.writeStringValue("bussinesAddress", userResponse.bussinesAddress);
        writer.writeEnumValue<BussinesCategoryType>("bussinesCategory", userResponse.bussinesCategory);
        writer.writeStringValue("bussinesName", userResponse.bussinesName);
        writer.writeStringValue("cif", userResponse.cif);
        writer.writeStringValue("city", userResponse.city);
        writer.writeStringValue("email", userResponse.email);
        writer.writeStringValue("googleMapsUrl", userResponse.googleMapsUrl);
        writer.writeGuidValue("id", userResponse.id);
        writer.writeStringValue("profilePicture", userResponse.profilePicture);
        writer.writeEnumValue<UserType>("userType", userResponse.userType);
    }
}
export interface TextTranslationRequest extends Parsable {
    /**
     * The targetLanguage property
     */
    targetLanguage?: string | null;
    /**
     * The text property
     */
    text?: string | null;
}
export interface TextTranslationResponse extends ApiError, Parsable {
    /**
     * The text property
     */
    text?: string | null;
}
export interface TokenResponse extends Parsable {
    /**
     * The access_token property
     */
    accessToken?: string | null;
    /**
     * The expires_in property
     */
    expiresIn?: number | null;
    /**
     * The refresh_token property
     */
    refreshToken?: string | null;
    /**
     * The scope property
     */
    scope?: string | null;
    /**
     * The token_type property
     */
    tokenType?: string | null;
    /**
     * The user property
     */
    user?: UserResponse | null;
}
export interface TokenResponseError extends ApiError, Parsable {
    /**
     * The error_description property
     */
    errorDescription?: string | null;
    /**
     * The error property
     */
    errorEscaped?: string | null;
    /**
     * The error_uri property
     */
    errorUri?: string | null;
}
export interface UserResponse extends Parsable {
    /**
     * The bussinesAddress property
     */
    bussinesAddress?: string | null;
    /**
     * The bussinesCategory property
     */
    bussinesCategory?: BussinesCategoryType | null;
    /**
     * The bussinesName property
     */
    bussinesName?: string | null;
    /**
     * The cif property
     */
    cif?: string | null;
    /**
     * The city property
     */
    city?: string | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The googleMapsUrl property
     */
    googleMapsUrl?: string | null;
    /**
     * The id property
     */
    id?: Guid | null;
    /**
     * The profilePicture property
     */
    profilePicture?: string | null;
    /**
     * The userType property
     */
    userType?: UserType | null;
}
export type UserType = (typeof UserTypeObject)[keyof typeof UserTypeObject];
export const BussinesCategoryTypeObject = {
    Undefined: "Undefined",
    FoodAndDrink: "FoodAndDrink",
    Cinema: "Cinema",
} as const;
export const UserTypeObject = {
    Undefined: "Undefined",
    Bussines: "Bussines",
    Student: "Student",
} as const;
/* tslint:enable */
/* eslint-enable */
