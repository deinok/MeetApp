/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createRegistrationRequestFromDiscriminatorValue, serializeRegistrationRequest, type RegistrationRequest } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/v1/users/registration
 */
export interface RegistrationRequestBuilder extends BaseRequestBuilder<RegistrationRequestBuilder> {
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RegistrationRequest>}
     * @throws {RegistrationRequest} error when the service returns a 400 status code
     */
     post(body: RegistrationRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<RegistrationRequest | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: RegistrationRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const RegistrationRequestBuilderUriTemplate = "{+baseurl}/api/v1/users/registration";
/**
 * Metadata for all the requests in the request builder.
 */
export const RegistrationRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: RegistrationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createRegistrationRequestFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRegistrationRequestFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRegistrationRequest,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
