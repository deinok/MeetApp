jobs:
  build:
    runs-on: "${{ matrix.runs-on }}"
    steps:
    - uses: "actions/checkout@v4"
    - uses: "actions/setup-dotnet@v4"
      with:
        global-json-file: "global.json"
    - uses: "actions/setup-node@v4"
    - run: "dotnet tool restore"
    - run: "dotnet restore"
    - run: "npm install"
      working-directory: "./src/MeetApp.Frontend/"
    - run: "dotnet build --configuration ${{ matrix.configuration }}"
    - run: "dotnet format --verify-no-changes"
    - run: "dotnet test --configuration ${{ matrix.configuration }}"
    - run: "npm run build"
      working-directory: "./src/MeetApp.Frontend/"
    - run: "dotnet publish --configuration ${{ matrix.configuration }}"
    - uses: "actions/upload-artifact@v4"
      with:
        if-no-files-found: "error"
        name: "${{ matrix.runs-on }}-${{ matrix.configuration }}"
        path: "./src/MeetApp.Backend/bin/${{ matrix.configuration}}/net9.0/publish/"
    strategy:
      matrix:
        configuration: [
          "Debug",
          "Release"
        ]
        runs-on: [
          "macos-latest", 
          "ubuntu-latest", 
          "windows-latest"
        ]
  deploy:
    if: "github.ref == 'refs/heads/main'"
    needs: "build"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/download-artifact@v4"
      with:
        name: "ubuntu-latest-Release"
    - uses: "azure/webapps-deploy@v2"
      with:
        app-name: "meet-app-udl"
        publish-profile: "${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}"
name: "main"
on:
  push:
    branches: [ 
      "main" 
    ]
  pull_request:
    branches: [ 
      "main" 
    ]
  schedule:
    - cron: "0 0 * * *"